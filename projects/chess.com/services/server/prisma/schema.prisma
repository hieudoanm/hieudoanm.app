datasource db {
  provider = "postgresql"
  url      = env("POSTGRESQL_URL")
}

generator client {
  provider = "prisma-client-js"
}

generator dbml {
  provider = "prisma-dbml-generator"
}

// generator docs {
//   provider = "node node_modules/prisma-docs-generator"
// }



generator jsonSchema {
  provider = "prisma-json-schema-generator"
}

generator markdown {
  provider = "prisma-markdown"
  output   = "./README.md"
}

generator nestjsDto {
  provider                        = "prisma-generator-nestjs-dto"
  output                          = "../src/generated/dto"
  outputToNestJsResourceStructure = "false"
  exportRelationModifierClasses   = "true"
  reExport                        = "false"
  createDtoPrefix                 = "Create"
  updateDtoPrefix                 = "Update"
  dtoSuffix                       = "Dto"
  entityPrefix                    = ""
  entitySuffix                    = "Dto"
  fileNamingStyle                 = "camel"
}

model Player {
  id                         Int       @id
  username                   String    @unique
  name                       String    @default("")
  followers                  Int       @default(0)
  avatar                     String    @default("")
  location                   String    @default("")
  country                    String    @default("")
  countryCode                String    @default("")
  twitchUrl                  String    @default("")
  isStreamer                 Boolean   @default(false)
  verified                   Boolean   @default(false)
  lastOnline                 DateTime  @default(now()) @db.Timestamptz
  joined                     DateTime  @default(now()) @db.Timestamptz
  status                     Status    @default(basic)
  title                      Title?
  league                     League?
  // Rapid
  statsDailyRatingBest       Int       @default(0)
  statsDailyRatingLast       Int       @default(0)
  statsDailyRatingDeviation  Int       @default(0)
  statsDailyRecordWin        Int       @default(0)
  statsDailyRecordDraw       Int       @default(0)
  statsDailyRecordLoss       Int       @default(0)
  // Rapid
  statsRapidRatingBest       Int       @default(0)
  statsRapidRatingLast       Int       @default(0)
  statsRapidRatingDeviation  Int       @default(0)
  statsRapidRecordWin        Int       @default(0)
  statsRapidRecordDraw       Int       @default(0)
  statsRapidRecordLoss       Int       @default(0)
  // Blitz
  statsBlitzRatingLast       Int       @default(0)
  statsBlitzRatingBest       Int       @default(0)
  statsBlitzRatingDeviation  Int       @default(0)
  statsBlitzRecordWin        Int       @default(0)
  statsBlitzRecordDraw       Int       @default(0)
  statsBlitzRecordLoss       Int       @default(0)
  // Bullet
  statsBulletRatingLast      Int       @default(0)
  statsBulletRatingBest      Int       @default(0)
  statsBulletRatingDeviation Int       @default(0)
  statsBulletRecordWin       Int       @default(0)
  statsBulletRecordDraw      Int       @default(0)
  statsBulletRecordLoss      Int       @default(0)
  // Archives
  archives                   String[]  @default([])
  createdAt                  DateTime? @default(now()) @db.Timestamptz
  updatedAt                  DateTime? @updatedAt @db.Timestamptz
}

enum Status {
  basic
  premium
}

enum League {
  Wood
  Stone
  Bronze
  Silver
  Crystal
  Elite
  Champion
  Legend
}

enum Title {
  GM
  WGM
  IM
  WIM
  FM
  WFM
  CM
  WCM
  NM
  WNM
  AGM
  AIM
  AFM
  ACM
}

model Game {
  id            String    @id
  url           String    @default("")
  pgn           String    @default("")
  timeControl   String    @default("")
  timeClass     String    @default("")
  endTime       DateTime  @default(now()) @db.Timestamptz
  rated         Boolean   @default(false)
  tcn           String    @default("")
  initialSetup  String    @default("")
  rules         String    @default("")
  whiteId       String    @default("")
  blackId       String    @default("")
  whiteUsername String    @default("")
  blackUsername String    @default("")
  whiteAccuracy Float     @default(0)
  blackAccuracy Float     @default(0)
  whiteResult   String    @default("")
  blackResult   String    @default("")
  whiteRating   Int       @default(0)
  blackRating   Int       @default(0)
  fen           String    @default("")
  createdAt     DateTime? @default(now()) @db.Timestamptz
  updatedAt     DateTime? @updatedAt @db.Timestamptz
  moves         Move[]
}

enum TimeClass {
  daily
  rapid
  blitz
  bullet
}

enum Rule {
  bughouse
  chess
  chess960
  crazyhouse
  kingofthehill
  oddschess
  threecheck
}

model Move {
  game       Game      @relation(references: [id], fields: [gameId])
  gameId     String    @default("")
  fen        String    @default("")
  number     Int       @default(0)
  annotation String    @default("")
  piece      Piece
  side       Side
  captured   Boolean   @default(false)
  castling   Boolean   @default(false)
  promote    Boolean   @default(false)
  promoteTo  Piece?
  check      Boolean   @default(false)
  checkmate  Boolean   @default(false)
  createdAt  DateTime? @default(now()) @db.Timestamptz
  updatedAt  DateTime? @updatedAt @db.Timestamptz

  @@id([gameId, number])
}

enum Piece {
  king
  queen
  rook
  bishop
  knight
  pawn
}

enum Side {
  white
  black
}

model Opening {
  eco       String    @default("")
  name      String    @default("")
  pgn       String    @default("")
  firstMove String    @default("")
  fen       String    @default("")
  centipawn Int       @default(0)
  createdAt DateTime? @default(now()) @db.Timestamptz
  updatedAt DateTime? @updatedAt @db.Timestamptz

  @@id([eco, name, pgn])
}

model Position {
  fen       String    @id
  centipawn Int       @default(0)
  pawn      Float     @default(0)
  nextMoves String    @default("")
  createdAt DateTime? @default(now()) @db.Timestamptz
  updatedAt DateTime? @updatedAt @db.Timestamptz
}
